{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dateint It's very common to store date/datetimes as integers or strings using formats such as YYYYmmdd or YYYYmm . In python, to perform date/datetime arithmetic on those values, one needs to: convert the original value to date or datetime perform the date/datetime operation convert the result back to the original format With dateint , we abstract all convertion operations so you can focus on the arithmetic step : single value: import dateint as di di . add ( 20220510 , days = 15 ) # 20220525 pandas: import dateint as di import pandas as pd dates = pd . Series ([ 202201 , 202202 , 202203 ]) di . add ( dates , months = 2 ) ''' 0 202203 1 202204 2 202205 dtype: int64 ''' Installation pip install dateint Examples Add a time interval to a date import dateint as di import pandas as pd di . add ( 20220510 , days = 15 ) # 20220525 dates = pd . Series ([ 202201 , 202202 , 202203 ]) di . add ( dates , months = 2 ) ''' 0 202203 1 202204 2 202205 dtype: int64 ''' Subtract a time interval from a date import dateint as di import pandas as pd di . sub ( 20220510 , days = 8 ) # 20220502 dates = pd . Series ([ 202201 , 202202 , 202203 ]) di . sub ( dates , years = 1 ) ''' 0 202101 1 202102 2 202103 dtype: int64 ''' Day of week import dateint as di import pandas as pd di . sub ( 20220510 , days = 8 ) # 20220502 df = pd . DataFrame ( { 'date' : [ 20220103 , 20220104 , 20220105 , 20220106 , 20220107 , 20220108 , 20220109 , ] } ) df [ 'weekday' ] = di . weekday ( df [ 'date' ]) df ''' date weekday 0 20220103 0 1 20220104 1 2 20220105 2 3 20220106 3 4 20220107 4 5 20220108 5 6 20220109 6 ''' License This project is licensed under the terms of the MIT license.","title":"Home"},{"location":"#dateint","text":"It's very common to store date/datetimes as integers or strings using formats such as YYYYmmdd or YYYYmm . In python, to perform date/datetime arithmetic on those values, one needs to: convert the original value to date or datetime perform the date/datetime operation convert the result back to the original format With dateint , we abstract all convertion operations so you can focus on the arithmetic step : single value: import dateint as di di . add ( 20220510 , days = 15 ) # 20220525 pandas: import dateint as di import pandas as pd dates = pd . Series ([ 202201 , 202202 , 202203 ]) di . add ( dates , months = 2 ) ''' 0 202203 1 202204 2 202205 dtype: int64 '''","title":"Dateint"},{"location":"#installation","text":"pip install dateint","title":"Installation"},{"location":"#examples","text":"Add a time interval to a date import dateint as di import pandas as pd di . add ( 20220510 , days = 15 ) # 20220525 dates = pd . Series ([ 202201 , 202202 , 202203 ]) di . add ( dates , months = 2 ) ''' 0 202203 1 202204 2 202205 dtype: int64 ''' Subtract a time interval from a date import dateint as di import pandas as pd di . sub ( 20220510 , days = 8 ) # 20220502 dates = pd . Series ([ 202201 , 202202 , 202203 ]) di . sub ( dates , years = 1 ) ''' 0 202101 1 202102 2 202103 dtype: int64 ''' Day of week import dateint as di import pandas as pd di . sub ( 20220510 , days = 8 ) # 20220502 df = pd . DataFrame ( { 'date' : [ 20220103 , 20220104 , 20220105 , 20220106 , 20220107 , 20220108 , 20220109 , ] } ) df [ 'weekday' ] = di . weekday ( df [ 'date' ]) df ''' date weekday 0 20220103 0 1 20220104 1 2 20220105 2 3 20220106 3 4 20220107 4 5 20220108 5 6 20220109 6 '''","title":"Examples"},{"location":"#license","text":"This project is licensed under the terms of the MIT license.","title":"License"},{"location":"api/","text":"API dateint . add ( date , * , years = 0 , months = 0 , days = 0 ) Add some time interval to a formatted date/datetime. Parameters: Name Type Description Default date Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime. required years int number of years to add. Defaults to 0. 0 months int number of months to add. Defaults to 0. 0 days int number of days to add. Defaults to 0. 0 Examples: import dateint as di import pandas as pd di . add ( 20220510 , days = 15 ) # 20220525 dates = pd . Series ([ 202201 , 202202 , 202203 ]) di . add ( dates , months = 2 ) ''' 0 202203 1 202204 2 202205 dtype: int64 ''' Returns: Type Description Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime. dateint . sub ( date , * , years = 0 , months = 0 , days = 0 ) Subtract some time interval from a formatted date/datetime. Parameters: Name Type Description Default date Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime. required years int number of years to subtract. Defaults to 0. 0 months int number of months to subtract. Defaults to 0. 0 days int number of days to subtract. Defaults to 0. 0 Examples: import dateint as di import pandas as pd di . sub ( 20220510 , days = 8 ) # 20220502 dates = pd . Series ([ 202201 , 202202 , 202203 ]) di . sub ( dates , years = 1 ) ''' 0 202101 1 202102 2 202103 dtype: int64 ''' Returns: Type Description Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime. dateint . today () Return current date as an integer, formatted as %Y%m%d. Returns: Type Description int Current date as an integer, formatted as %Y%m%d. dateint . weekday ( date ) Return day of week as returned by datetime.datetime.weekday() method. Return the day of week as an integer, where Monday is 0 and Sunday is 6. Parameters: Name Type Description Default date Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime. required Returns: Type Description Union [ pandas . Series , int ] day of week (from 0 to 6) dateint . isoweekday ( date ) Return day of week as returned by datetime.datetime.isoweekday() method. Return the day of week as an integer, where Monday is 1 and Sunday is 7. Parameters: Name Type Description Default date Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime. required Returns: Type Description Union [ pandas . Series , int ] day of week (from 1 to 7)","title":"API"},{"location":"api/#api","text":"","title":"API"},{"location":"api/#dateint.add","text":"Add some time interval to a formatted date/datetime. Parameters: Name Type Description Default date Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime. required years int number of years to add. Defaults to 0. 0 months int number of months to add. Defaults to 0. 0 days int number of days to add. Defaults to 0. 0 Examples: import dateint as di import pandas as pd di . add ( 20220510 , days = 15 ) # 20220525 dates = pd . Series ([ 202201 , 202202 , 202203 ]) di . add ( dates , months = 2 ) ''' 0 202203 1 202204 2 202205 dtype: int64 ''' Returns: Type Description Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime.","title":"add()"},{"location":"api/#dateint.sub","text":"Subtract some time interval from a formatted date/datetime. Parameters: Name Type Description Default date Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime. required years int number of years to subtract. Defaults to 0. 0 months int number of months to subtract. Defaults to 0. 0 days int number of days to subtract. Defaults to 0. 0 Examples: import dateint as di import pandas as pd di . sub ( 20220510 , days = 8 ) # 20220502 dates = pd . Series ([ 202201 , 202202 , 202203 ]) di . sub ( dates , years = 1 ) ''' 0 202101 1 202102 2 202103 dtype: int64 ''' Returns: Type Description Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime.","title":"sub()"},{"location":"api/#dateint.today","text":"Return current date as an integer, formatted as %Y%m%d. Returns: Type Description int Current date as an integer, formatted as %Y%m%d.","title":"today()"},{"location":"api/#dateint.weekday","text":"Return day of week as returned by datetime.datetime.weekday() method. Return the day of week as an integer, where Monday is 0 and Sunday is 6. Parameters: Name Type Description Default date Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime. required Returns: Type Description Union [ pandas . Series , int ] day of week (from 0 to 6)","title":"weekday()"},{"location":"api/#dateint.isoweekday","text":"Return day of week as returned by datetime.datetime.isoweekday() method. Return the day of week as an integer, where Monday is 1 and Sunday is 7. Parameters: Name Type Description Default date Union [ pd . Series , int , str , float ] a series of formatted dates/datetimes, or a single formatted date/datetime. required Returns: Type Description Union [ pandas . Series , int ] day of week (from 1 to 7)","title":"isoweekday()"},{"location":"release_notes/","text":"Release Notes v0.1.0 First release of dateint package. Features function dateint.add . function dateint.isoweekday . function dateint.sub . function dateint.today . function dateint.weekday .","title":"Release Notes"},{"location":"release_notes/#release-notes","text":"","title":"Release Notes"},{"location":"release_notes/#v010","text":"First release of dateint package.","title":"v0.1.0"},{"location":"release_notes/#features","text":"function dateint.add . function dateint.isoweekday . function dateint.sub . function dateint.today . function dateint.weekday .","title":"Features"}]}